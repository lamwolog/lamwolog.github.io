# 自定义View基础

参考：https://blog.csdn.net/carson_ho/article/details/56009827

## 1. View的分类

视图View主要分为两类：

| 类别     | 解释                                      | 特点         |
| -------- | ----------------------------------------- | ------------ |
| 单一视图 | 即一个View，如TextView                    | 不包含子View |
| 视图组   | 即多个View组成的ViewGroup，如LinearLayout | 包含子View   |

## 2.View类简介

- View类是Android中各种组件的基类，如View是ViewGroup基类
- View表现为显示在屏幕上的各种视图

> Android中的UI组件都由View、ViewGroup组成。

- View的构造函数：共有4个，具体如下：

> 自定义View必须重写至少一个构造函数：

```java
// 如果View是在Java代码里面new的，则调用第一个构造函数
 public CarsonView(Context context) {
        super(context);
    }

// 如果View是在.xml里声明的，则调用第二个构造函数
// 自定义属性是从AttributeSet参数传进来的
    public  CarsonView(Context context, AttributeSet attrs) {
        super(context, attrs);
    }

// 不会自动调用
// 一般是在第二个构造函数里主动调用
// 如View有style属性时
    public  CarsonView(Context context, AttributeSet attrs, int defStyleAttr) {
        super(context, attrs, defStyleAttr);
    }

    //API21之后才使用
    // 不会自动调用
    // 一般是在第二个构造函数里主动调用
    // 如View有style属性时
    public  CarsonView(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {
        super(context, attrs, defStyleAttr, defStyleRes);
    }

```

## 3.View视图结构

对于多View的视图，**结构是树形结构**：最顶层是ViewGroup，ViewGroup下可能有多个ViewGroup或View，如下图：

![View树结构](https://imgconvert.csdnimg.cn/aHR0cDovL3VwbG9hZC1pbWFnZXMuamlhbnNodS5pby91cGxvYWRfaW1hZ2VzLzk0NDM2NS1hZmIyYmU0MzFlNTIzYmFmLnBuZz9pbWFnZU1vZ3IyL2F1dG8tb3JpZW50L3N0cmlwJTdDaW1hZ2VWaWV3Mi8yL3cvMTI0MA)

请记住：无论是measure过程、layout过程还是draw过程，**永远都是从View树的根节点开始测量或计算（即从树的顶端开始），一层一层、一个分支一个分支地进行（即树形递归），**最终计算整个View树中各个View，最终确定整个View树的相关属性。

## 4.Android坐标系

Android的坐标系定义为：

- 屏幕的左上角为坐标原点
- 向右为x轴增大方向
- 向下为y轴增大方向

具体如下图：
![屏幕坐标系](https://imgconvert.csdnimg.cn/aHR0cDovL3VwbG9hZC1pbWFnZXMuamlhbnNodS5pby91cGxvYWRfaW1hZ2VzLzk0NDM2NS1lZTBjZDM5ZmQ3ODhlMjkzLnBuZz9pbWFnZU1vZ3IyL2F1dG8tb3JpZW50L3N0cmlwJTdDaW1hZ2VWaWV3Mi8yL3cvMTI0MA)

**注：区别于一般的数学坐标系**

![两者坐标系的区别](https://imgconvert.csdnimg.cn/aHR0cDovL3VwbG9hZC1pbWFnZXMuamlhbnNodS5pby91cGxvYWRfaW1hZ2VzLzk0NDM2NS1iZGRjMjM2NmJjYTc4ZWZmLnBuZz9pbWFnZU1vZ3IyL2F1dG8tb3JpZW50L3N0cmlwJTdDaW1hZ2VWaWV3Mi8yL3cvMTI0MA)

## 5.View位置坐标描述

- View的位置由4个顶点决定的（如下A、B、C、D）

![View的顶点](https://imgconvert.csdnimg.cn/aHR0cDovL3VwbG9hZC1pbWFnZXMuamlhbnNodS5pby91cGxvYWRfaW1hZ2VzLzk0NDM2NS0zOThjNjEwYTQ2NGNiZGM4LnBuZz9pbWFnZU1vZ3IyL2F1dG8tb3JpZW50L3N0cmlwJTdDaW1hZ2VWaWV3Mi8yL3cvMTI0MA)

4个顶点的位置描述分别由4个值决定：
（请记住：View的位置是相对于父控件而言的）

- Top：子View上边界到父view上边界的距离
- Left：子View左边界到父view左边界的距离
- Bottom：子View下边距到父View上边界的距离
- Right：子View右边界到父view左边界的距离

如下图：
![View的位置描述](https://imgconvert.csdnimg.cn/aHR0cDovL3VwbG9hZC1pbWFnZXMuamlhbnNodS5pby91cGxvYWRfaW1hZ2VzLzk0NDM2NS0yZmIyNjgyYzQ1ZDA1ZmY5LnBuZz9pbWFnZU1vZ3IyL2F1dG8tb3JpZW50L3N0cmlwJTdDaW1hZ2VWaWV3Mi8yL3cvMTI0MA)

**个人建议**：按顶点位置来记忆：

- Top：子View左上角距父View顶部的距离；
- Left：子View左上角距父View左侧的距离；
- Bottom：子View右下角距父View顶部的距离
- Right：子View右下角距父View左侧的距离

## 6.位置获取方式

- View的位置是通过`view.getxxx()`函数进行获取：**（以Top为例）**

```java
// 获取Top位置
public final int getTop() {  
    return mTop;  
}  

// 其余如下：
  getLeft();      //获取子View左上角距父View左侧的距离
  getBottom();    //获取子View右下角距父View顶部的距离
  getRight();     //获取子View右下角距父View左侧的距离

```

- 与MotionEvent中 `get()`和`getRaw()`的区别

```java
//get() ：触摸点相对于其所在组件坐标系的坐标
 event.getX();       
 event.getY();

//getRaw() ：触摸点相对于屏幕默认坐标系的坐标
 event.getRawX();    
 event.getRawY();

```

具体如下图：

![get() 和 getRaw() 的区别](https://imgconvert.csdnimg.cn/aHR0cDovL3VwbG9hZC1pbWFnZXMuamlhbnNodS5pby91cGxvYWRfaW1hZ2VzLzk0NDM2NS1lNTBhMjcwNWNkZDYzMmQzLnBuZz9pbWFnZU1vZ3IyL2F1dG8tb3JpZW50L3N0cmlwJTdDaW1hZ2VWaWV3Mi8yL3cvMTI0MA)

## 7.Android的角度(angle)与弧度(radian)

- 自定义View实际上是将一些简单的形状通过计算，从而组合到一起形成的效果。

> 这会涉及到画布的相关操作(旋转)、正余弦函数计算等，即会涉及到角度(angle)与弧度(radian)的相关知识。

- 角度和弧度都是描述角的一种度量单位，区别如下图：

  ![角度和弧度区别](https://imgconvert.csdnimg.cn/aHR0cDovL3VwbG9hZC1pbWFnZXMuamlhbnNodS5pby91cGxvYWRfaW1hZ2VzLzk0NDM2NS1iMDQwNWM4Y2EyOGVhZGEwLnBuZz9pbWFnZU1vZ3IyL2F1dG8tb3JpZW50L3N0cmlwJTdDaW1hZ2VWaWV3Mi8yL3cvMTI0MA)

在默认的屏幕坐标系中角度增大方向为顺时针。

![屏幕坐标系角度增大方向](https://imgconvert.csdnimg.cn/aHR0cDovL3VwbG9hZC1pbWFnZXMuamlhbnNodS5pby91cGxvYWRfaW1hZ2VzLzk0NDM2NS1kZTM1ZDFiZGZlYTQ2NDcwLnBuZz9pbWFnZU1vZ3IyL2F1dG8tb3JpZW50L3N0cmlwJTdDaW1hZ2VWaWV3Mi8yL3cvMTI0MA)

**注：在常见的数学坐标系中角度增大方向为逆时针**

## 8.Android中颜色相关内容

Android中的颜色相关内容包括颜色模式，创建颜色的方式，以及颜色的混合模式等。

### 8.1 颜色模式

Android支持的颜色模式：

![Android颜色模式](https://imgconvert.csdnimg.cn/aHR0cDovL3VwbG9hZC1pbWFnZXMuamlhbnNodS5pby91cGxvYWRfaW1hZ2VzLzk0NDM2NS00M2QyMDUxYzMzMmUwZjk1LnBuZz9pbWFnZU1vZ3IyL2F1dG8tb3JpZW50L3N0cmlwJTdDaW1hZ2VWaWV3Mi8yL3cvMTI0MA)

以ARGB8888为例介绍颜色定义:

![ARGB88888](https://imgconvert.csdnimg.cn/aHR0cDovL3VwbG9hZC1pbWFnZXMuamlhbnNodS5pby91cGxvYWRfaW1hZ2VzLzk0NDM2NS1mNjNkMzA1NTczOWYwOGIyLnBuZz9pbWFnZU1vZ3IyL2F1dG8tb3JpZW50L3N0cmlwJTdDaW1hZ2VWaWV3Mi8yL3cvMTI0MA)
