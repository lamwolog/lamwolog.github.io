# Graphic内存

| 技术指标数据类型 | 代表含义    | 改值的大小代表的含义                                  | 哪些情况该值会升高以及影响                                   | 哪些情况该值会降低以及影响 | app运行过程中该值的范围通常由哪些因素确定                    |
| ---------------- | ----------- | ----------------------------------------------------- | ------------------------------------------------------------ | -------------------------- | ------------------------------------------------------------ |
| Graphics         | GPU绘制内存 | 包括：GL mtrack、EGL mtrack、Gfx dev，不含共享Gpu部分 | 1. 使用硬件加速、使用系统GPU相关的api  <br>2. 使用GPU进行图形操作，如render，视频处理，图片处理等<br><font color=red>影响：直接影响应用总内存</font> | 回收控制权由系统控制       | 系统中根据以下不同flag执行不同策略：<br>1.COMPLETE：最大限度释放graphic相关的内存，Android原生设计只运行应用在后台的时候才可以使用。<br>2.RUNNING_CRITICAL：同MODERATE<br>3.MODERATE：释放部分graphic内存，Android原生设计只运行应用在后台的时候才可以使用。<br>4.HIDDEN：应用开始不可见，释放部分graphic内存，应用可以通过实现onTrimMemory接口来主动释放一些内存<br>5.RUNNING_LOW：应用可见，应用可以通过实现onTrimMemory接口来主动释放一些内存<br>6.BACKGROUND：同RUNNING_LOW<br>7.RUNNING_MODERATE：同RUNNING_LOW<br>后续推进系统制定策略，开放一个接口可以让使用者决定是否要快速的释放显存 |

| 数据类型                     | 对应的名字  | 含义                                                         |
| ---------------------------- | ----------- | ------------------------------------------------------------ |
| MEMTRACK_TYPE_OTHER = 0      |             |                                                              |
| MEMTRACK_TYPE_GL = 1         | GL mtrack   | 驱动上报的GPU内存使用情况。 主要是GL texture大小，GL command buffer，固定的全局驱动程序RAM开销以及Shader等的总和。需要指出，这些不会出现在旧的Android版本上。注意：客户空间驱动和内核空间驱动共享同一个内存空间。在某些Android版本上，这个部分会被重复计算两次，因此Gfx dev要比实际上使用的数值更大。 |
| MEMTRACK_TYPE_GRAPHICS = 2   | ELG mstrack | 这个部分是gralloc的内存使用。主要是窗口系统，SurfaceView/TextureView和其他的由gralloc分配的GraphicBuffer总和。它也包括了帧缓冲区，因此大小也会取决于framebuffers的尺寸。支持的屏幕分辨率越高，EGL mtrack的数目越高。在这个测试中，帧缓冲区的分辨率被降低了来确保比较好的性能。降低帧缓存的大小也会降低这些缓存需要的内存量。 |
| MEMTRACK_TYPE_MULTIMEDIA = 3 |             |                                                              |
| MEMTRACK_CAMERA = 4          |             |                                                              |

